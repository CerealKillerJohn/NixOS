# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" "wl" ];
  boot.extraModulePackages = [ config.boot.kernelPackages.broadcom_sta ];

#  fileSystems."/" =
#    { device = "/dev/disk/by-uuid/9dc6826a-ab31-46d1-9f8c-aed2ddf578c1";
#      fsType = "ext4";
#    };

#  boot.initrd.luks.devices."luks-19d3dee5-7695-48ec-a900-d338675946cd".device = "/dev/disk/by-uuid/19d3dee5-7695-48ec-a900-d338675946cd";

#  fileSystems."/boot" =
#    { device = "/dev/disk/by-uuid/A83C-6618";
#      fsType = "vfat";
#    };

#  swapDevices =
#    [ { device = "/dev/disk/by-uuid/01906ebd-778d-4e79-be67-bccb838310d7"; }
#    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
